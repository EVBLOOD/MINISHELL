/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   t_treec                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: sakllam <sakllam@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/03/04 15:29:34 by sakllam           #+#    #+#             */
/*   Updated: 2022/03/04 19:55:27 by sakllam          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

// #include "../minishell.h"

void	ft_lstadd_front_right(t_tree **lst, t_tree *new)
{
	new->right = NULL;
	*lst = new;
}

void	ft_lstadd_back_right(t_tree **lst, t_tree *new)
{
	t_tree	*ptr;

	if (!*lst)
		ft_lstadd_front(lst, new);
	else
	{
		ptr = ft_lstlast_right((*lst));
		ptr->right = new;
	}
}

t_tree	*ft_lstlast_right(t_tree *lst)
{
	t_tree	*temp;

	if (!lst)
		return (NULL);
	while (lst)
	{
		temp = lst;
		lst = lst->right;
	}
	return (temp);
}

void	ft_lstadd_front_left(t_tree **lst, t_tree *new)
{
	new->left = NULL;
	*lst = new;
}

void	ft_lstadd_back_left(t_tree **lst, t_tree *new)
{
	t_tree	*ptr;

	if (!*lst)
		ft_lstadd_front(lst, new);
	else
	{
		ptr = ft_lstlast_left((*lst));
		ptr->left = new;
	}
}

t_tree	*ft_lstlast_left(t_tree *lst)
{
	t_tree	*temp;

	if (!lst)
		return (NULL);
	while (lst)
	{
		temp = lst;
		lst = lst->left;
	}
	return (temp);
}